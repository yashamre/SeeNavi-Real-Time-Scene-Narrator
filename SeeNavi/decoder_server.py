# -*- coding: utf-8 -*-
"""decoder_server

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Fi59lVoCtZc7RtmghsPHXYGr4cyQCIzU
"""

from flask import Flask, request, jsonify
from transformers import BlipProcessor, BlipForConditionalGeneration
import torch
from PIL import Image
import io
import base64

app = Flask(__name__)

# Load BLIP model and processor
processor = BlipProcessor.from_pretrained("Salesforce/blip-image-captioning-base")
model = BlipForConditionalGeneration.from_pretrained("Salesforce/blip-image-captioning-base")
model.eval()

@app.route('/decode', methods=['POST'])
def decode():
    data = request.get_json()
    if not data or 'image' not in data:
        return jsonify({"error": "No image provided"}), 400

    try:
        image_data = base64.b64decode(data['image'])
        image = Image.open(io.BytesIO(image_data)).convert('RGB')
    except Exception as e:
        return jsonify({"error": f"Invalid image data: {str(e)}"}), 400

    try:
        inputs = processor(images=image, return_tensors="pt")
        with torch.no_grad():
            output = model.generate(**inputs)
        caption = processor.decode(output[0], skip_special_tokens=True)

        return jsonify({"caption": caption})
    except Exception as e:
        return jsonify({"error": f"Caption generation failed: {str(e)}"}), 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5005)